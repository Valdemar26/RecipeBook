import express from 'express';
import path from 'path';
import bodyParser from 'body-parser';
import consolidate from 'consolidate';
import dust from 'dustjs-helpers';
import pg from 'pg';
const app = express();

// DB Connect String
const connect = "postgress://eduonix:123456@localhost/recipebookdb";

// Assign Dust Engine to .dust Files
app.engine('dust', consolidate.dust);

// Set Default Ext .dust
app.set('view engine', 'dust');
app.set('views', `${__dirname}/views`);

// Set Public Folder
app.use(express.static(path.join(__dirname, 'public')));

// Body Parser Middleware
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: false}));

// GET
app.get('/', (req, res) => {
    // PG Connect
    pg.connect(connect, (err, client, done) => {
        if(err){
            return console.error('error fetching client from pool', err);
        }
        client.query('SELECT * FROM recipes', (err, result) => {
            if(err){
                return console.error('error running query', err);
            }
            res.render('index', {recipes: result.rows});
            done();
        });
    });
});

// ADD Recipe (method POST)
app.post('/add', (req, res) => {
    // PG Connect
    pg.connect(connect, (err, client, done) => {
        if(err){
            return console.error('error fetching client from pool', err);
        }
        client.query("INSERT INTO recipes(name, ingredients, directions) VALUES($1, $2, $3) ",
            [req.body.name, req.body.ingredients, req.body.directions]);

        done();
        res.redirect('/');

    });
});

// DELETE Recipe (method DELETE)
app.delete('/delete/:id', (req, res) => {
    // PG Connect
    pg.connect(connect, (err, client, done) => {
        if(err){
            return console.error('error fetching client from pool', err);
        }
        client.query("DELETE FROM recipes WHERE id = $1",
            [req.params.id]);

        done();
        res.sendStatus(200);

    });
});

// EDIT Recipe (method POST)
app.post('/edit', (req, res) => {
    // PG Connect
    pg.connect(connect, (err, client, done) => {
        if(err){
            return console.error('error fetching client from pool', err);
        }
        client.query("UPDATE recipes SET name=$1, ingredients=$2, directions=$3 WHERE id=$4",
            [req.body.name, req.body.ingredients, req.body.directions, req.body.id]);

        done();
        res.redirect('/');

    });
});

// Server
app.listen(3000, () => {
    console.log('Server Started On Port 3000');
});
